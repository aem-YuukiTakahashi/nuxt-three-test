(window.webpackJsonp=window.webpackJsonp||[]).push([[40],{277:function(e,t,r){"use strict";r.d(t,"b",(function(){return c})),r.d(t,"a",(function(){return d}));var n=r(129),o=r(130),l=r(260),c=function(){function e(){Object(n.a)(this,e),this.enabled=!0,this.needsSwap=!0,this.clear=!1,this.renderToScreen=!1}return Object(o.a)(e,[{key:"setSize",value:function(){}},{key:"render",value:function(){console.error("THREE.Pass: .render() must be implemented in derived pass.")}}]),e}(),h=new l.F(-1,1,1,-1,0,1),f=new l.g;f.setAttribute("position",new l.q([-1,3,0,-1,-1,0,3,-1,0],3)),f.setAttribute("uv",new l.q([0,2,0,0,2,0],2));var d=function(){function e(t){Object(n.a)(this,e),this._mesh=new l.z(f,t)}return Object(o.a)(e,[{key:"dispose",value:function(){this._mesh.geometry.dispose()}},{key:"render",value:function(e){e.render(this._mesh,h)}},{key:"material",get:function(){return this._mesh.material},set:function(e){this._mesh.material=e}}]),e}()},332:function(e,t,r){"use strict";r.d(t,"a",(function(){return n}));var n={uniforms:{tDiffuse:{value:null},opacity:{value:1}},vertexShader:"\n\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\n\t\t\tvUv = uv;\n\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n\t\t}",fragmentShader:"\n\n\t\tuniform float opacity;\n\n\t\tuniform sampler2D tDiffuse;\n\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\n\t\t\tgl_FragColor = texture2D( tDiffuse, vUv );\n\t\t\tgl_FragColor.a *= opacity;\n\n\n\t\t}"}},441:function(e,t,r){"use strict";r.d(t,"a",(function(){return v}));r(18),r(263);var n=r(129),o=r(130),l=r(264),c=r(265),h=r(262),f=r(260);function d(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}();return function(){var r,n=Object(h.a)(e);if(t){var o=Object(h.a)(this).constructor;r=Reflect.construct(n,arguments,o)}else r=n.apply(this,arguments);return Object(c.a)(this,r)}}var v=function(e){Object(l.a)(r,e);var t=d(r);function r(e,o,l,c,h){var d;return Object(n.a)(this,r),(d=t.call(this)).scene=e,d.camera=o,d.overrideMaterial=l,d.clearColor=c,d.clearAlpha=void 0!==h?h:0,d.clear=!0,d.clearDepth=!1,d.needsSwap=!1,d._oldClearColor=new f.j,d}return Object(o.a)(r,[{key:"render",value:function(e,t,r){var n,o,l=e.autoClear;e.autoClear=!1,void 0!==this.overrideMaterial&&(o=this.scene.overrideMaterial,this.scene.overrideMaterial=this.overrideMaterial),this.clearColor&&(e.getClearColor(this._oldClearColor),n=e.getClearAlpha(),e.setClearColor(this.clearColor,this.clearAlpha)),this.clearDepth&&e.clearDepth(),e.setRenderTarget(this.renderToScreen?null:r),this.clear&&e.clear(e.autoClearColor,e.autoClearDepth,e.autoClearStencil),e.render(this.scene,this.camera),this.clearColor&&e.setClearColor(this._oldClearColor,n),void 0!==this.overrideMaterial&&(this.scene.overrideMaterial=o),e.autoClear=l}}]),r}(r(277).b)},442:function(e,t,r){"use strict";r.d(t,"a",(function(){return v}));r(18),r(263);var n=r(129),o=r(130),l=r(264),c=r(265),h=r(262),f=r(260);function d(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}();return function(){var r,n=Object(h.a)(e);if(t){var o=Object(h.a)(this).constructor;r=Reflect.construct(n,arguments,o)}else r=n.apply(this,arguments);return Object(c.a)(this,r)}}var v=function(e){Object(l.a)(r,e);var t=d(r);function r(e,o){var l;return Object(n.a)(this,r),(l=t.call(this)).needsSwap=!1,l.clearColor=void 0!==e?e:0,l.clearAlpha=void 0!==o?o:0,l._oldClearColor=new f.j,l}return Object(o.a)(r,[{key:"render",value:function(e,t,r){var n;this.clearColor&&(e.getClearColor(this._oldClearColor),n=e.getClearAlpha(),e.setClearColor(this.clearColor,this.clearAlpha)),e.setRenderTarget(this.renderToScreen?null:r),e.clear(),this.clearColor&&e.setClearColor(this._oldClearColor,n)}}]),r}(r(277).b)},491:function(e,t,r){"use strict";r.d(t,"a",(function(){return S}));var n=r(129),o=r(130),l=(r(44),r(187),r(260)),c=r(332),h=(r(18),r(263),r(264)),f=r(265),d=r(262),v=r(277);function m(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}();return function(){var r,n=Object(d.a)(e);if(t){var o=Object(d.a)(this).constructor;r=Reflect.construct(n,arguments,o)}else r=n.apply(this,arguments);return Object(f.a)(this,r)}}var x=function(e){Object(h.a)(r,e);var t=m(r);function r(e,o){var c;return Object(n.a)(this,r),(c=t.call(this)).textureID=void 0!==o?o:"tDiffuse",e instanceof l.M?(c.uniforms=e.uniforms,c.material=e):e&&(c.uniforms=l.V.clone(e.uniforms),c.material=new l.M({defines:Object.assign({},e.defines),uniforms:c.uniforms,vertexShader:e.vertexShader,fragmentShader:e.fragmentShader})),c.fsQuad=new v.a(c.material),c}return Object(o.a)(r,[{key:"render",value:function(e,t,r){this.uniforms[this.textureID]&&(this.uniforms[this.textureID].value=r.texture),this.fsQuad.material=this.material,this.renderToScreen?(e.setRenderTarget(null),this.fsQuad.render(e)):(e.setRenderTarget(t),this.clear&&e.clear(e.autoClearColor,e.autoClearDepth,e.autoClearStencil),this.fsQuad.render(e))}}]),r}(v.b);function T(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}();return function(){var r,n=Object(d.a)(e);if(t){var o=Object(d.a)(this).constructor;r=Reflect.construct(n,arguments,o)}else r=n.apply(this,arguments);return Object(f.a)(this,r)}}var C=function(e){Object(h.a)(r,e);var t=T(r);function r(e,o){var l;return Object(n.a)(this,r),(l=t.call(this)).scene=e,l.camera=o,l.clear=!0,l.needsSwap=!1,l.inverse=!1,l}return Object(o.a)(r,[{key:"render",value:function(e,t,r){var n,o,l=e.getContext(),c=e.state;c.buffers.color.setMask(!1),c.buffers.depth.setMask(!1),c.buffers.color.setLocked(!0),c.buffers.depth.setLocked(!0),this.inverse?(n=0,o=1):(n=1,o=0),c.buffers.stencil.setTest(!0),c.buffers.stencil.setOp(l.REPLACE,l.REPLACE,l.REPLACE),c.buffers.stencil.setFunc(l.ALWAYS,n,4294967295),c.buffers.stencil.setClear(o),c.buffers.stencil.setLocked(!0),e.setRenderTarget(r),this.clear&&e.clear(),e.render(this.scene,this.camera),e.setRenderTarget(t),this.clear&&e.clear(),e.render(this.scene,this.camera),c.buffers.color.setLocked(!1),c.buffers.depth.setLocked(!1),c.buffers.stencil.setLocked(!1),c.buffers.stencil.setFunc(l.EQUAL,1,4294967295),c.buffers.stencil.setOp(l.KEEP,l.KEEP,l.KEEP),c.buffers.stencil.setLocked(!0)}}]),r}(v.b),y=function(e){Object(h.a)(r,e);var t=T(r);function r(){var e;return Object(n.a)(this,r),(e=t.call(this)).needsSwap=!1,e}return Object(o.a)(r,[{key:"render",value:function(e){e.state.buffers.stencil.setLocked(!1),e.state.buffers.stencil.setTest(!1)}}]),r}(v.b),S=function(){function e(t,r){if(Object(n.a)(this,e),this.renderer=t,void 0===r){var o=t.getSize(new l.W);this._pixelRatio=t.getPixelRatio(),this._width=o.width,this._height=o.height,(r=new l.Y(this._width*this._pixelRatio,this._height*this._pixelRatio)).texture.name="EffectComposer.rt1"}else this._pixelRatio=1,this._width=r.width,this._height=r.height;this.renderTarget1=r,this.renderTarget2=r.clone(),this.renderTarget2.texture.name="EffectComposer.rt2",this.writeBuffer=this.renderTarget1,this.readBuffer=this.renderTarget2,this.renderToScreen=!0,this.passes=[],void 0===c.a&&console.error("THREE.EffectComposer relies on CopyShader"),void 0===x&&console.error("THREE.EffectComposer relies on ShaderPass"),this.copyPass=new x(c.a),this.clock=new l.i}return Object(o.a)(e,[{key:"swapBuffers",value:function(){var e=this.readBuffer;this.readBuffer=this.writeBuffer,this.writeBuffer=e}},{key:"addPass",value:function(e){this.passes.push(e),e.setSize(this._width*this._pixelRatio,this._height*this._pixelRatio)}},{key:"insertPass",value:function(e,t){this.passes.splice(t,0,e),e.setSize(this._width*this._pixelRatio,this._height*this._pixelRatio)}},{key:"removePass",value:function(e){var t=this.passes.indexOf(e);-1!==t&&this.passes.splice(t,1)}},{key:"isLastEnabledPass",value:function(e){for(var i=e+1;i<this.passes.length;i++)if(this.passes[i].enabled)return!1;return!0}},{key:"render",value:function(e){void 0===e&&(e=this.clock.getDelta());for(var t=this.renderer.getRenderTarget(),r=!1,i=0,n=this.passes.length;i<n;i++){var o=this.passes[i];if(!1!==o.enabled){if(o.renderToScreen=this.renderToScreen&&this.isLastEnabledPass(i),o.render(this.renderer,this.writeBuffer,this.readBuffer,e,r),o.needsSwap){if(r){var l=this.renderer.getContext(),c=this.renderer.state.buffers.stencil;c.setFunc(l.NOTEQUAL,1,4294967295),this.copyPass.render(this.renderer,this.writeBuffer,this.readBuffer,e),c.setFunc(l.EQUAL,1,4294967295)}this.swapBuffers()}void 0!==C&&(o instanceof C?r=!0:o instanceof y&&(r=!1))}}this.renderer.setRenderTarget(t)}},{key:"reset",value:function(e){if(void 0===e){var t=this.renderer.getSize(new l.W);this._pixelRatio=this.renderer.getPixelRatio(),this._width=t.width,this._height=t.height,(e=this.renderTarget1.clone()).setSize(this._width*this._pixelRatio,this._height*this._pixelRatio)}this.renderTarget1.dispose(),this.renderTarget2.dispose(),this.renderTarget1=e,this.renderTarget2=e.clone(),this.writeBuffer=this.renderTarget1,this.readBuffer=this.renderTarget2}},{key:"setSize",value:function(e,t){this._width=e,this._height=t;var r=this._width*this._pixelRatio,n=this._height*this._pixelRatio;this.renderTarget1.setSize(r,n),this.renderTarget2.setSize(r,n);for(var i=0;i<this.passes.length;i++)this.passes[i].setSize(r,n)}},{key:"setPixelRatio",value:function(e){this._pixelRatio=e,this.setSize(this._width,this._height)}}]),e}(),w=(new l.F(-1,1,1,-1,0,1),new l.g);w.setAttribute("position",new l.q([-1,3,0,-1,-1,0,3,-1,0],3)),w.setAttribute("uv",new l.q([0,2,0,0,2,0],2))},492:function(e,t,r){"use strict";r.d(t,"a",(function(){return T}));r(18),r(263);var n=r(129),o=r(130),l=r(264),c=r(265),h=r(262),f=(r(44),r(48),r(260)),d=r(277),v=r(332),m={shaderID:"luminosityHighPass",uniforms:{tDiffuse:{value:null},luminosityThreshold:{value:1},smoothWidth:{value:1},defaultColor:{value:new f.j(0)},defaultOpacity:{value:0}},vertexShader:"\n\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\n\t\t\tvUv = uv;\n\n\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n\t\t}",fragmentShader:"\n\n\t\tuniform sampler2D tDiffuse;\n\t\tuniform vec3 defaultColor;\n\t\tuniform float defaultOpacity;\n\t\tuniform float luminosityThreshold;\n\t\tuniform float smoothWidth;\n\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\n\t\t\tvec4 texel = texture2D( tDiffuse, vUv );\n\n\t\t\tvec3 luma = vec3( 0.299, 0.587, 0.114 );\n\n\t\t\tfloat v = dot( texel.xyz, luma );\n\n\t\t\tvec4 outputColor = vec4( defaultColor.rgb, defaultOpacity );\n\n\t\t\tfloat alpha = smoothstep( luminosityThreshold, luminosityThreshold + smoothWidth, v );\n\n\t\t\tgl_FragColor = mix( outputColor, texel, alpha );\n\n\t\t}"};function x(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}();return function(){var r,n=Object(h.a)(e);if(t){var o=Object(h.a)(this).constructor;r=Reflect.construct(n,arguments,o)}else r=n.apply(this,arguments);return Object(c.a)(this,r)}}var T=function(e){Object(l.a)(r,e);var t=x(r);function r(e,o,l,c){var h;Object(n.a)(this,r),(h=t.call(this)).strength=void 0!==o?o:1,h.radius=l,h.threshold=c,h.resolution=void 0!==e?new f.W(e.x,e.y):new f.W(256,256),h.clearColor=new f.j(0,0,0),h.renderTargetsHorizontal=[],h.renderTargetsVertical=[],h.nMips=5;var x=Math.round(h.resolution.x/2),T=Math.round(h.resolution.y/2);h.renderTargetBright=new f.Y(x,T),h.renderTargetBright.texture.name="UnrealBloomPass.bright",h.renderTargetBright.texture.generateMipmaps=!1;for(var i=0;i<h.nMips;i++){var C=new f.Y(x,T);C.texture.name="UnrealBloomPass.h"+i,C.texture.generateMipmaps=!1,h.renderTargetsHorizontal.push(C);var y=new f.Y(x,T);y.texture.name="UnrealBloomPass.v"+i,y.texture.generateMipmaps=!1,h.renderTargetsVertical.push(y),x=Math.round(x/2),T=Math.round(T/2)}void 0===m&&console.error("THREE.UnrealBloomPass relies on LuminosityHighPassShader");var S=m;h.highPassUniforms=f.V.clone(S.uniforms),h.highPassUniforms.luminosityThreshold.value=c,h.highPassUniforms.smoothWidth.value=.01,h.materialHighPassFilter=new f.M({uniforms:h.highPassUniforms,vertexShader:S.vertexShader,fragmentShader:S.fragmentShader,defines:{}}),h.separableBlurMaterials=[];var w=[3,5,7,9,11];x=Math.round(h.resolution.x/2),T=Math.round(h.resolution.y/2);for(var M=0;M<h.nMips;M++)h.separableBlurMaterials.push(h.getSeperableBlurMaterial(w[M])),h.separableBlurMaterials[M].uniforms.texSize.value=new f.W(x,T),x=Math.round(x/2),T=Math.round(T/2);h.compositeMaterial=h.getCompositeMaterial(h.nMips),h.compositeMaterial.uniforms.blurTexture1.value=h.renderTargetsVertical[0].texture,h.compositeMaterial.uniforms.blurTexture2.value=h.renderTargetsVertical[1].texture,h.compositeMaterial.uniforms.blurTexture3.value=h.renderTargetsVertical[2].texture,h.compositeMaterial.uniforms.blurTexture4.value=h.renderTargetsVertical[3].texture,h.compositeMaterial.uniforms.blurTexture5.value=h.renderTargetsVertical[4].texture,h.compositeMaterial.uniforms.bloomStrength.value=o,h.compositeMaterial.uniforms.bloomRadius.value=.1,h.compositeMaterial.needsUpdate=!0;h.compositeMaterial.uniforms.bloomFactors.value=[1,.8,.6,.4,.2],h.bloomTintColors=[new f.X(1,1,1),new f.X(1,1,1),new f.X(1,1,1),new f.X(1,1,1),new f.X(1,1,1)],h.compositeMaterial.uniforms.bloomTintColors.value=h.bloomTintColors,void 0===v.a&&console.error("THREE.UnrealBloomPass relies on CopyShader");var R=v.a;return h.copyUniforms=f.V.clone(R.uniforms),h.copyUniforms.opacity.value=1,h.materialCopy=new f.M({uniforms:h.copyUniforms,vertexShader:R.vertexShader,fragmentShader:R.fragmentShader,blending:f.a,depthTest:!1,depthWrite:!1,transparent:!0}),h.enabled=!0,h.needsSwap=!1,h._oldClearColor=new f.j,h.oldClearAlpha=1,h.basic=new f.A,h.fsQuad=new d.a(null),h}return Object(o.a)(r,[{key:"dispose",value:function(){for(var i=0;i<this.renderTargetsHorizontal.length;i++)this.renderTargetsHorizontal[i].dispose();for(var e=0;e<this.renderTargetsVertical.length;e++)this.renderTargetsVertical[e].dispose();this.renderTargetBright.dispose()}},{key:"setSize",value:function(e,t){var r=Math.round(e/2),n=Math.round(t/2);this.renderTargetBright.setSize(r,n);for(var i=0;i<this.nMips;i++)this.renderTargetsHorizontal[i].setSize(r,n),this.renderTargetsVertical[i].setSize(r,n),this.separableBlurMaterials[i].uniforms.texSize.value=new f.W(r,n),r=Math.round(r/2),n=Math.round(n/2)}},{key:"render",value:function(e,t,n,o,l){e.getClearColor(this._oldClearColor),this.oldClearAlpha=e.getClearAlpha();var c=e.autoClear;e.autoClear=!1,e.setClearColor(this.clearColor,0),l&&e.state.buffers.stencil.setTest(!1),this.renderToScreen&&(this.fsQuad.material=this.basic,this.basic.map=n.texture,e.setRenderTarget(null),e.clear(),this.fsQuad.render(e)),this.highPassUniforms.tDiffuse.value=n.texture,this.highPassUniforms.luminosityThreshold.value=this.threshold,this.fsQuad.material=this.materialHighPassFilter,e.setRenderTarget(this.renderTargetBright),e.clear(),this.fsQuad.render(e);for(var h=this.renderTargetBright,i=0;i<this.nMips;i++)this.fsQuad.material=this.separableBlurMaterials[i],this.separableBlurMaterials[i].uniforms.colorTexture.value=h.texture,this.separableBlurMaterials[i].uniforms.direction.value=r.BlurDirectionX,e.setRenderTarget(this.renderTargetsHorizontal[i]),e.clear(),this.fsQuad.render(e),this.separableBlurMaterials[i].uniforms.colorTexture.value=this.renderTargetsHorizontal[i].texture,this.separableBlurMaterials[i].uniforms.direction.value=r.BlurDirectionY,e.setRenderTarget(this.renderTargetsVertical[i]),e.clear(),this.fsQuad.render(e),h=this.renderTargetsVertical[i];this.fsQuad.material=this.compositeMaterial,this.compositeMaterial.uniforms.bloomStrength.value=this.strength,this.compositeMaterial.uniforms.bloomRadius.value=this.radius,this.compositeMaterial.uniforms.bloomTintColors.value=this.bloomTintColors,e.setRenderTarget(this.renderTargetsHorizontal[0]),e.clear(),this.fsQuad.render(e),this.fsQuad.material=this.materialCopy,this.copyUniforms.tDiffuse.value=this.renderTargetsHorizontal[0].texture,l&&e.state.buffers.stencil.setTest(!0),this.renderToScreen?(e.setRenderTarget(null),this.fsQuad.render(e)):(e.setRenderTarget(n),this.fsQuad.render(e)),e.setClearColor(this._oldClearColor,this.oldClearAlpha),e.autoClear=c}},{key:"getSeperableBlurMaterial",value:function(e){return new f.M({defines:{KERNEL_RADIUS:e,SIGMA:e},uniforms:{colorTexture:{value:null},texSize:{value:new f.W(.5,.5)},direction:{value:new f.W(.5,.5)}},vertexShader:"varying vec2 vUv;\n\t\t\t\tvoid main() {\n\t\t\t\t\tvUv = uv;\n\t\t\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\t\t\t\t}",fragmentShader:"#include <common>\n\t\t\t\tvarying vec2 vUv;\n\t\t\t\tuniform sampler2D colorTexture;\n\t\t\t\tuniform vec2 texSize;\n\t\t\t\tuniform vec2 direction;\n\n\t\t\t\tfloat gaussianPdf(in float x, in float sigma) {\n\t\t\t\t\treturn 0.39894 * exp( -0.5 * x * x/( sigma * sigma))/sigma;\n\t\t\t\t}\n\t\t\t\tvoid main() {\n\t\t\t\t\tvec2 invSize = 1.0 / texSize;\n\t\t\t\t\tfloat fSigma = float(SIGMA);\n\t\t\t\t\tfloat weightSum = gaussianPdf(0.0, fSigma);\n\t\t\t\t\tvec3 diffuseSum = texture2D( colorTexture, vUv).rgb * weightSum;\n\t\t\t\t\tfor( int i = 1; i < KERNEL_RADIUS; i ++ ) {\n\t\t\t\t\t\tfloat x = float(i);\n\t\t\t\t\t\tfloat w = gaussianPdf(x, fSigma);\n\t\t\t\t\t\tvec2 uvOffset = direction * invSize * x;\n\t\t\t\t\t\tvec3 sample1 = texture2D( colorTexture, vUv + uvOffset).rgb;\n\t\t\t\t\t\tvec3 sample2 = texture2D( colorTexture, vUv - uvOffset).rgb;\n\t\t\t\t\t\tdiffuseSum += (sample1 + sample2) * w;\n\t\t\t\t\t\tweightSum += 2.0 * w;\n\t\t\t\t\t}\n\t\t\t\t\tgl_FragColor = vec4(diffuseSum/weightSum, 1.0);\n\t\t\t\t}"})}},{key:"getCompositeMaterial",value:function(e){return new f.M({defines:{NUM_MIPS:e},uniforms:{blurTexture1:{value:null},blurTexture2:{value:null},blurTexture3:{value:null},blurTexture4:{value:null},blurTexture5:{value:null},bloomStrength:{value:1},bloomFactors:{value:null},bloomTintColors:{value:null},bloomRadius:{value:0}},vertexShader:"varying vec2 vUv;\n\t\t\t\tvoid main() {\n\t\t\t\t\tvUv = uv;\n\t\t\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\t\t\t\t}",fragmentShader:"varying vec2 vUv;\n\t\t\t\tuniform sampler2D blurTexture1;\n\t\t\t\tuniform sampler2D blurTexture2;\n\t\t\t\tuniform sampler2D blurTexture3;\n\t\t\t\tuniform sampler2D blurTexture4;\n\t\t\t\tuniform sampler2D blurTexture5;\n\t\t\t\tuniform float bloomStrength;\n\t\t\t\tuniform float bloomRadius;\n\t\t\t\tuniform float bloomFactors[NUM_MIPS];\n\t\t\t\tuniform vec3 bloomTintColors[NUM_MIPS];\n\n\t\t\t\tfloat lerpBloomFactor(const in float factor) {\n\t\t\t\t\tfloat mirrorFactor = 1.2 - factor;\n\t\t\t\t\treturn mix(factor, mirrorFactor, bloomRadius);\n\t\t\t\t}\n\n\t\t\t\tvoid main() {\n\t\t\t\t\tgl_FragColor = bloomStrength * ( lerpBloomFactor(bloomFactors[0]) * vec4(bloomTintColors[0], 1.0) * texture2D(blurTexture1, vUv) +\n\t\t\t\t\t\tlerpBloomFactor(bloomFactors[1]) * vec4(bloomTintColors[1], 1.0) * texture2D(blurTexture2, vUv) +\n\t\t\t\t\t\tlerpBloomFactor(bloomFactors[2]) * vec4(bloomTintColors[2], 1.0) * texture2D(blurTexture3, vUv) +\n\t\t\t\t\t\tlerpBloomFactor(bloomFactors[3]) * vec4(bloomTintColors[3], 1.0) * texture2D(blurTexture4, vUv) +\n\t\t\t\t\t\tlerpBloomFactor(bloomFactors[4]) * vec4(bloomTintColors[4], 1.0) * texture2D(blurTexture5, vUv) );\n\t\t\t\t}"})}}]),r}(d.b);T.BlurDirectionX=new f.W(1,0),T.BlurDirectionY=new f.W(0,1)}}]);