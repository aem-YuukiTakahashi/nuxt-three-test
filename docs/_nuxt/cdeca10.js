(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{435:function(n,e,o){"use strict";o.r(e);var t=o(257),r="  void main() {\n    gl_Position = vec4(position, 1.0);\n  }",v="precision mediump float;\nuniform vec2 iResolution;\nuniform float iGlobalTime;\n\n// Some utils first\n\n// From Stackoveflow\n// http://stackoverflow.com/questions/15095909/from-rgb-to-hsv-in-opengl-glsl\nvec3 hsv2rgb(vec3 c) {\n        vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n        vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n        return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\n// Simplex 2D noise\n// from https://gist.github.com/patriciogonzalezvivo/670c22f3966e662d2f83\nvec3 permute(vec3 x) {\n    return mod(((x*34.0)+1.0)*x, 289.0);\n}\n\nfloat snoise(vec2 v){\n    const vec4 C = vec4(0.211324865405187, 0.366025403784439,\n                        -0.577350269189626, 0.024390243902439);\n    vec2 i  = floor(v + dot(v, C.yy) );\n    vec2 x0 = v -   i + dot(i, C.xx);\n    vec2 i1;\n    i1 = (x0.x > x0.y) ? vec2(1.0, 0.0) : vec2(0.0, 1.0);\n    vec4 x12 = x0.xyxy + C.xxzz;\n    x12.xy -= i1;\n    i = mod(i, 289.0);\n    vec3 p = permute( permute( i.y + vec3(0.0, i1.y, 1.0 ))\n                    + i.x + vec3(0.0, i1.x, 1.0 ));\n    vec3 m = max(0.5 - vec3(dot(x0,x0), dot(x12.xy,x12.xy),\n                            dot(x12.zw,x12.zw)), 0.0);\n    m = m*m ;\n    m = m*m ;\n    vec3 x = 2.0 * fract(p * C.www) - 1.0;\n    vec3 h = abs(x) - 0.5;\n    vec3 ox = floor(x + 0.5);\n    vec3 a0 = x - ox;\n    m *= 1.79284291400159 - 0.85373472095314 * ( a0*a0 + h*h );\n    vec3 g;\n    g.x  = a0.x  * x0.x  + h.x  * x0.y;\n    g.yz = a0.yz * x12.xz + h.yz * x12.yw;\n    return 130.0 * dot(m, g);\n}\n\n// This is my code\nvoid main(void) {\n    vec2 uv = gl_FragCoord.xy / iResolution.xy;\n    float xnoise = snoise(vec2(uv.x, iGlobalTime / 5.0 + 10000.0));\n    float ynoise = snoise(vec2(uv.y, iGlobalTime / 5.0 + 500.0));\n    vec2 t = vec2(xnoise, ynoise);\n    float s1 = snoise(uv + t / 2.0 + snoise(uv + snoise(uv + t/3.0) / 5.0));\n    float s2 = snoise(uv + snoise(uv + s1) / 7.0);\n    vec3 hsv = vec3(s1, 1.0, 1.0-s2);\n    vec3 rgb = hsv2rgb(hsv);\n    gl_FragColor = vec4(rgb, 1.0);\n}",c={data:function(){return{renderer:null,scene:null,camera:null,uniforms:null,startTime:null}},computed:{},mounted:function(){this.init()},methods:{init:function(){console.log(r),console.log(v),this.startTime=Date.now();var n=new t.g;n.position.z=1,this.camera=n;var e=new t.z,o=new t.y(16,9);this.uniforms={iGlobalTime:{type:"f",value:1},iResolution:{type:"v2",value:new t.I}};var c=new t.A({uniforms:this.uniforms,vertexShader:r,fragmentShader:v}),l=new t.q(o,c);e.add(l),this.scene=e;var x=new t.L({canvas:document.querySelector("#myCanvas")});x.setPixelRatio(window.devicePixelRatio),this.renderer=x,this.onWindowResize(),window.addEventListener("resize",this.onWindowResize,!1),this.animate()},animate:function(){requestAnimationFrame(this.animate),this.render()},render:function(){var n=Date.now();this.uniforms.iGlobalTime.value=.001*(n-this.startTime),this.renderer.render(this.scene,this.camera)},onWindowResize:function(){this.uniforms.iResolution.value.x=window.innerWidth,this.uniforms.iResolution.value.y=window.innerHeight,this.renderer.setSize(window.innerWidth,window.innerHeight)}}},l=o(43),component=Object(l.a)(c,(function(){var n=this._self._c;return n("div",[n("canvas",{ref:"canvas",attrs:{id:"myCanvas"}})])}),[],!1,null,null,null);e.default=component.exports}}]);